--- a/Source/WTF/wtf/URLHelpers.cpp	2021-02-26 01:57:08
+++ b/Source/WTF/wtf/URLHelpers.cpp	2024-07-13 13:14:05
@@ -52,7 +52,7 @@
 //    WebKit was compiled.
 // This is only really important for platforms that load an external IDN allowed script list.
 // Not important for the compiled-in one.
-constexpr auto scriptCodeLimit = static_cast<UScriptCode>(256);
+constexpr auto scriptCodeLimit = static_cast<UScriptCode>(255);
 
 static uint32_t allowedIDNScriptBits[(scriptCodeLimit + 31) / 32];
 

--- a/Source/WTF/wtf/PlatformUse.h	2021-02-26 01:57:08
+++ b/Source/WTF/wtf/PlatformUse.h	2024-07-14 09:27:02
@@ -313,7 +313,7 @@
 #define USE_LEGACY_CFNETWORK_DOWNLOADS 1
 #endif
 
-#if (PLATFORM(MAC) && __MAC_OS_X_VERSION_MIN_REQUIRED >= 110000) \
+#if (OS(MAC_OS_X) && __MAC_OS_X_VERSION_MIN_REQUIRED >= 110000)              \
     || (PLATFORM(MACCATALYST) && __IPHONE_OS_VERSION_MIN_REQUIRED >= 140000)
 #if USE(APPLE_INTERNAL_SDK)
 /* Always use the macro on internal builds */

--- b/Source/WTF/wtf/glib/GLibUtilities.cpp	2024-07-13 12:02:10
+++ b/Source/WTF/wtf/glib/GLibUtilities.cpp	2024-07-15 17:19:10
@@ -58,6 +58,19 @@
     CFStringGetCString(string, bundle_path, len, kCFStringEncodingUTF8);
     CFRelease(abs_url);
     CFRelease(string);
+
+    auto basename{g_path_get_basename(bundle_path)};
+    if (g_strcmp0("bin", basename) == 0)
+    {
+        auto parent_path{g_path_get_dirname(bundle_path)};
+        if (parent_path && *parent_path)
+        {
+            strncpy(bundle_path, parent_path, len);
+            len = strlen(parent_path);
+            g_free(parent_path);
+        }
+    }
+    g_free(basename);
     return CString(bundle_path, len);
 }
 #endif

--- a/Source/WebCore/platform/LayoutUnit.h
+++ b/Source/WebCore/platform/LayoutUnit.h
@@ -83,7 +83,7 @@
     {
         m_value = clampToInteger(value * kFixedPointDenominator);
     }
-
+    LayoutUnit(const LayoutUnit& other) = default;
     LayoutUnit& operator=(const LayoutUnit& other) = default;
     LayoutUnit& operator=(const float& other) { return *this = LayoutUnit(other); }
 

--- a/Source/WebCore/xml/XSLStyleSheetLibxslt.cpp
+++ b/Source/WebCore/xml/XSLStyleSheetLibxslt.cpp
@@ -139,7 +139,8 @@
     if (frame && frame->page())
         console = &frame->page()->console();
 
-    XMLDocumentParserScope scope(cachedResourceLoader(), XSLTProcessor::genericErrorFunc, XSLTProcessor::parseErrorFunc, console);
+    XMLDocumentParserScope scope(cachedResourceLoader(), XSLTProcessor::genericErrorFunc,
+                                 (xmlStructuredErrorFunc)XSLTProcessor::parseErrorFunc, console);
 
     auto upconvertedCharacters = StringView(string).upconvertedCharacters();
     const char* buffer = reinterpret_cast<const char*>(upconvertedCharacters.get());

--- a/Source/WebCore/xml/XSLTProcessorLibxslt.cpp
+++ b/Source/WebCore/xml/XSLTProcessorLibxslt.cpp
@@ -130,7 +130,7 @@
         Frame* frame = globalProcessor->xslStylesheet()->ownerDocument()->frame();
         if (frame && frame->page())
             console = &frame->page()->console();
-        xmlSetStructuredErrorFunc(console, XSLTProcessor::parseErrorFunc);
+        xmlSetStructuredErrorFunc(console, (xmlStructuredErrorFunc)XSLTProcessor::parseErrorFunc);
         xmlSetGenericErrorFunc(console, XSLTProcessor::genericErrorFunc);
 
         // We don't specify an encoding here. Neither Gecko nor WinIE respects

--- a/Source/WTF/wtf/Platform.h
+++ b/Source/WTF/wtf/Platform.h
@@ -115,6 +115,7 @@
 /* ICU configuration. Some of these match ICU defaults on some platforms, but we would like them consistently set everywhere we build WebKit. */
 #define U_HIDE_DEPRECATED_API 1
 #define U_SHOW_CPLUSPLUS_API 0
+#define U_SHOW_CPLUSPLUS_HEADER_API 0
 #ifdef __cplusplus
 #define UCHAR_TYPE char16_t
 #endif

